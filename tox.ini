[tox]
minversion=2.0
distshare={homedir}/.tox/distshare
# make sure to update environment list on appveyor.yml
envlist=
     linting
     py26
     py27
     py33
     py34
     py35
     py36
     py37
     pypy
     {py27,py35}-{pexpect,xdist,trial}
     py27-nobyte
     doctesting
     freeze
     docs

[testenv]
commands= pytest --lsof -rfsxX {posargs:testing}
passenv = USER USERNAME
deps=    
    hypothesis>=3.5.2
    nose
    mock
    requests

[testenv:py26]
commands= pytest --lsof -rfsxX {posargs:testing}
# pinning mock to last supported version for python 2.6
deps=
    hypothesis<3.0
    nose
    mock<1.1

[testenv:py27-subprocess]
changedir=.
basepython=python2.7
deps=pytest-xdist>=1.13
    mock
    nose
commands=
  pytest -n3 -rfsxX --runpytest=subprocess {posargs:testing}


[testenv:linting]
basepython = python2.7
deps =
    flake8
    # pygments required by rst-lint
    pygments  
    restructuredtext_lint
    check-manifest
commands =
    {envpython} scripts/check-manifest.py
    flake8 pytest.py _pytest testing
    rst-lint CHANGELOG.rst HOWTORELEASE.rst README.rst

[testenv:py27-xdist]
deps=pytest-xdist>=1.13
    mock
    nose
    hypothesis>=3.5.2
commands=
  pytest -n1 -rfsxX {posargs:testing}

[testenv:py35-xdist]
deps={[testenv:py27-xdist]deps}
commands=
  pytest -n3 -rfsxX {posargs:testing}

[testenv:py27-pexpect]
changedir=testing
platform=linux|darwin
deps=pexpect
commands=
  pytest -rfsxX test_pdb.py test_terminal.py test_unittest.py

[testenv:py35-pexpect]
changedir=testing
platform=linux|darwin
deps={[testenv:py27-pexpect]deps}
commands=
  pytest -rfsxX test_pdb.py test_terminal.py test_unittest.py

[testenv:py27-nobyte]
deps=
    pytest-xdist>=1.13
    hypothesis>=3.5.2
distribute=true
setenv=
    PYTHONDONTWRITEBYTECODE=1
commands=
  pytest -n3 -rfsxX {posargs:testing}

[testenv:py27-trial]
deps=twisted
commands=
  pytest -ra {posargs:testing/test_unittest.py}

[testenv:py35-trial]
deps={[testenv:py27-trial]deps}
commands=
  pytest -ra {posargs:testing/test_unittest.py}

[testenv:docs]
skipsdist=True
usedevelop=True
basepython=python
changedir=doc/en
deps=
    sphinx
    PyYAML

commands=
    sphinx-build -W -b html . _build

[testenv:doctesting]
basepython = python
usedevelop=True
skipsdist=True
# ensure the given pyargs cant mean anytrhing else
changedir=doc/
deps=
    PyYAML
commands=
    pytest -rfsxX en
    pytest --doctest-modules --pyargs _pytest

[testenv:regen]
changedir=doc/en
basepython = python3.5
deps=sphinx
     PyYAML
     regendoc>=0.6.1
whitelist_externals=
    rm
    make
commands=
    rm -rf /tmp/doc-exec*
    make regen

[testenv:jython]
changedir=testing
commands=
    {envpython} {envbindir}/py.test-jython -rfsxX {posargs}

[testenv:freeze]
changedir=testing/freeze
deps=pyinstaller
commands=
    {envpython} create_executable.py
    {envpython} tox_run.py


[testenv:coveralls]
passenv = TRAVIS TRAVIS_JOB_ID TRAVIS_BRANCH COVERALLS_REPO_TOKEN
usedevelop=True
basepython=python3.5
changedir=.
deps =
    {[testenv]deps}
    coveralls
commands=
    coverage run --source=_pytest -m pytest testing
    coverage report -m
    coveralls

[pytest]
minversion=2.0
plugins=pytester
#--pyargs --doctest-modules --ignore=.tox
addopts= -rxsX -p pytester --ignore=testing/cx_freeze
rsyncdirs=tox.ini pytest.py _pytest testing
python_files=test_*.py *_test.py testing/*/*.py
python_classes=Test Acceptance
python_functions=test
norecursedirs = .tox ja .hg cx_freeze_source


[flake8]
ignore =E401,E225,E261,E128,E124,E301,E302,E121,E303,W391,E501,E231,E126,E701,E265,E241,E251,E226,E101,W191,E131,E203,E122,E123,E271,E712,E222,E127,E125,E221,W292,E111,E113,E293,E262,W293,E129,E702,E201,E272,E202,E704,E731,E402
exclude = _pytest/vendored_packages/pluggy.py
